(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{431:function(e,s,t){"use strict";t.r(s);var n=t(62),a=Object(n.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#部署"}},[e._v("#")]),e._v(" 部署")]),e._v(" "),t("p",[e._v("下述的指南基于以下条件：")]),e._v(" "),t("ul",[t("li",[e._v("Markdown 源文件放置在你项目的 "),t("code",[e._v("docs")]),e._v(" 目录；")]),e._v(" "),t("li",[e._v("使用的是默认的构建输出目录 ("),t("code",[e._v(".vuepress/dist")]),e._v(") ；")]),e._v(" "),t("li",[e._v("使用 "),t("a",{attrs:{href:"https://classic.yarnpkg.com/zh-Hans/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Yarn classic在新窗口打开"),t("OutboundLink")],1),e._v(" 作为包管理器，当然也可以使用 NPM 。")]),e._v(" "),t("li",[e._v("VuePress 作为项目依赖安装，并在 "),t("code",[e._v("package.json")]),e._v(" 中配置了如下脚本：")])]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('{\n  "scripts": {\n    "docs:build": "vuepress build docs"\n  }\n}\n')])])]),t("h2",{attrs:{id:"github-pages"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#github-pages"}},[e._v("#")]),e._v(" GitHub Pages")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("设置正确的 "),t("a",{attrs:{href:"https://v2.vuepress.vuejs.org/zh/reference/config.html#base",target:"_blank",rel:"noopener noreferrer"}},[e._v("base"),t("OutboundLink")],1),e._v(" 选项。")]),e._v(" "),t("p",[e._v("如果你准备发布到 "),t("code",[e._v("https://<USERNAME>.github.io/")]),e._v(" ，你可以省略这一步，因为 "),t("code",[e._v("base")]),e._v(" 默认就是 "),t("code",[e._v('"/"')]),e._v(" 。")]),e._v(" "),t("p",[e._v("如果你准备发布到 "),t("code",[e._v("https://<USERNAME>.github.io/<REPO>/")]),e._v(" ，也就是说你的仓库地址是 "),t("code",[e._v("https://github.com/<USERNAME>/<REPO>")]),e._v(" ，则将 "),t("code",[e._v("base")]),e._v(" 设置为 "),t("code",[e._v('"/<REPO>/"')]),e._v("。")])]),e._v(" "),t("li",[t("p",[e._v("选择你想要使用的 CI 工具。这里我们以 "),t("a",{attrs:{href:"https://github.com/features/actions",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub Actions在新窗口打开"),t("OutboundLink")],1),e._v(" 为例。")]),e._v(" "),t("p",[e._v("创建 "),t("code",[e._v(".github/workflows/docs.yml")]),e._v(" 文件来配置工作流。")])])]),e._v(" "),t("p",[e._v("配置样例：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("name: docs\n\non:\n  # 每当 push 到 main 分支时触发部署\n  push:\n    branches: [main]\n  # 手动触发部署\n  workflow_dispatch:\n\njobs:\n  docs:\n    runs-on: ubuntu-latest\n\n    steps:\n      - uses: actions/checkout@v2\n        with:\n          # “最近更新时间” 等 git 日志相关信息，需要拉取全部提交记录\n          fetch-depth: 0\n\n      - name: Setup Node.js\n        uses: actions/setup-node@v1\n        with:\n          # 选择要使用的 node 版本\n          node-version: '14'\n\n      # 缓存 node_modules\n      - name: Cache dependencies\n        uses: actions/cache@v2\n        id: yarn-cache\n        with:\n          path: |\n            **/node_modules\n          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}\n          restore-keys: |\n            ${{ runner.os }}-yarn-\n\n      # 如果缓存没有命中，安装依赖\n      - name: Install dependencies\n        if: steps.yarn-cache.outputs.cache-hit != 'true'\n        run: yarn --frozen-lockfile\n\n      # 运行构建脚本\n      - name: Build VuePress site\n        run: yarn docs:build\n\n      # 查看 workflow 的文档来获取更多信息\n      # @see https://github.com/crazy-max/ghaction-github-pages\n      - name: Deploy to GitHub Pages\n        uses: crazy-max/ghaction-github-pages@v2\n        with:\n          # 部署到 gh-pages 分支\n          target_branch: gh-pages\n          # 部署目录为 VuePress 的默认输出目录\n          build_dir: docs/.vuepress/dist\n        env:\n          # @see https://docs.github.com/cn/actions/reference/authentication-in-a-workflow#about-the-github_token-secret\n          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n")])])]),t("p",[t("strong",[e._v("提示")])]),e._v(" "),t("p",[e._v("请参考 "),t("a",{attrs:{href:"https://pages.github.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub Pages 官方指南"),t("OutboundLink")],1),e._v(" 来获取更多信息。")]),e._v(" "),t("h2",{attrs:{id:"部署到-github-pages"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#部署到-github-pages"}},[e._v("#")]),e._v(" 部署到 Github pages")]),e._v(" "),t("ol",[t("li",[t("p",[e._v("下载 gh-pages 包")]),e._v(" "),t("p",[t("code",[e._v("npm install -D gh-pages")])])]),e._v(" "),t("li",[t("p",[e._v("在 package.json 文件上添加脚本命令")]),e._v(" "),t("div",{staticClass:"language-js extra-class"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token string-property property"}},[e._v('"scripts"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 上面我修改了 VuePress 的输出目录，所以您如果没有修改 .vuepress/config.js")]),e._v("\n "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("// 的 dest 属性，应该将这里的 dist 改为 .vuepress/dist")]),e._v("\n "),t("span",{pre:!0,attrs:{class:"token string-property property"}},[e._v('"deploy"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"gh-pages -d dist"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n "),t("span",{pre:!0,attrs:{class:"token string-property property"}},[e._v('"deploy:build"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v('"npm run docs:build && gh-pages -d dist"')]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])])]),e._v(" "),t("li",[t("p",[e._v("打包并推送到 gh-pages 分支\n"),t("code",[e._v("npm run deploy:build")])])]),e._v(" "),t("li",[t("p",[e._v("打开你的 Github pages, 地址是 "),t("code",[e._v("https://<yourname>/github.io/<repo>")])])])])])}),[],!1,null,null,null);s.default=a.exports}}]);